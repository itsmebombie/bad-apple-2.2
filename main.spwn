frametime = 1/30 // 30 fps
x_offset = 0 // when the video starts (at what x)
y_offset = 2000
canvas_offset = { x: 0, y: 0 }
canvas_scale = 10
frames_amt = 6513
max_vertices = 905
max_faces = 334
move_multiplier = 300 / 0.089588 // unit conversion from blender units to gd
player_speed = 8.36820065875 // 0.5x

// max values: x = 0.119476, y = 0.089588
data = $.readfile("out.json", "json")[:55]


extract obj_props
extract import obj_props_2_2



let curr_x = x_offset
let curr_y = y_offset
let next_id = 1

let vertices = {}
let faces = {}



disable_gradient = (id) {
    str_id = @string(id)
    if faces.get(str_id, default=null) == null { return }
    if faces[str_id][3] == false { return }

    $.add(obj{
        OBJ_ID: 2903, // gradient trigger
        SCALING: 0.25,
        X: curr_x, Y: curr_y,
        GR_VERTEX_MODE: true,
        GR_DISABLE: true,
        GR_ID: id,
    })

    curr_y -= 5
    faces[str_id][3] = false
}

enable_gradient = (a, b, c, id) {
    // create gradient (v1, v2, v3, enabled)
    str_id = @string(id)
    if faces.get(str_id, default=null) == null { let faces[str_id] = [a, b, c, false] }
    else if faces[str_id][0] == a && faces[str_id][1] == b && faces[str_id][2] == c { return }
    
    face = faces[str_id]

    $.add(obj{
        OBJ_ID: 2903, // gradient trigger
        SCALING: 0.25,
        X: curr_x, Y: curr_y,
        GR_VERTEX_MODE: true,
        GR_BL: vertices[@string(a)].group,
        GR_BR: vertices[@string(b)].group,
        GR_TL: vertices[@string(c)].group,
        GR_TR: vertices[@string(c)].group,
        GR_LAYER: 4,
        GR_ID: id,
    })

    curr_y -= 5
    faces[str_id][3] = true
}

move_vertex = (v_idx, x, y) {
    if vertices.get(v_idx, default = null) == null {
        let vertices[v_idx] = { x: x, y: y, group: ?g }

        $.add(obj{
            OBJ_ID: 211, // white block
            SCALING: 0.01,
            X: x * move_multiplier,
            Y: -y * move_multiplier,
            GROUPS: vertices[v_idx].group,
        })
    }

    vertex = vertices[v_idx]

    to_move_x = $.round((x - vertex.x) * move_multiplier * 100) / 100
    to_move_y = $.round(-(y - vertex.y) * move_multiplier * 100) / 100

    if to_move_x == 0 && to_move_y == 0 { return }

    $.add(obj{
        OBJ_ID: 901, // move trigger
        X: curr_x, Y: curr_y,
        TARGET: vertex.group,
        MOVE_X: to_move_x,
        MOVE_Y: to_move_y,
        SCALING: 0.25,
        DURATION: 0,
    })

    curr_y -= 5

    vertices[v_idx].x = x
    vertices[v_idx].y = y
}

draw_triangle = (triangle, frame) {
    if triangle >= frame.faces.length { return } // not sure why this would be the case

    [a, b, c] = frame.faces[triangle]
    [ax, ay] = frame.vertices[a-1]
    [bx, by] = frame.vertices[b-1]
    [cx, cy] = frame.vertices[c-1]

    move_vertex(@string(a), ax, ay)
    move_vertex(@string(b), bx, by)
    move_vertex(@string(c), cx, cy)
    enable_gradient(a, b, c, triangle)
}

hide_triangle = (triangle) {
    disable_gradient(triangle)
}

let last_face_amt = 0
for j in 0..frames_amt {
    if j >= data.length { break }

    frame = data[j]
    curr_x += frametime * player_speed * 300
    curr_y = y_offset

    if frame.type == @number { continue } // its empty

    for i in 0..last_face_amt-1 { draw_triangle(i, frame) }
    for i in last_face_amt..frame.faces.length { hide_triangle(i) }
    
    last_face_amt = frame.faces.length

    $.print("frame ", j)
}
